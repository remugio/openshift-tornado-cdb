#!/bin/bash
source $OPENSHIFT_REPO_DIR/misc/openshift/func
source $OPENSHIFT_REPO_DIR/misc/openshift/virtualenv


# Try to guess the number of processors from /proc/cpuinfo.
if [ -f /proc/cpuinfo ]; then
    NUMBER_OF_PROCESSORS=$(grep -c ^processor /proc/cpuinfo)
else
    NUMBER_OF_PROCESSORS=1
fi

function check_python() {
    msg_info "Checking for python..."
    if [ -d $PYTHON_DIR ]; then
        msg_success "Checking for python... already installed."
        return
    fi

    msg_info "Installing python $PYTHON_VERSION..."
    cd $OPENSHIFT_TMP_DIR
    wget http://python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz

    tar zxf Python-$PYTHON_VERSION.tgz
    cd Python-$PYTHON_VERSION
    ./configure --prefix=$PYTHON_DIR
    make install -j$NUMBER_OF_PROCESSORS

    check_status $? "Installing python $PYTHON_VERSION..."
}

# virtualenv is already provided by OpenShift
# so we don't need to compile and install it
function check_venv() {
    msg_info "Checking for virtualenv..."
    if [ -d $VIRTUALENV_DIR ]; then
        msg_success "Checking for virtualenv... exists."
        return
    fi

    msg_info "Creating virtualenv..."
    virtualenv --no-site-packages --python="$PYTHON_DIR/bin/python" $VIRTUALENV_DIR
    check_status $? 'Creating virtualenv...'
}

function install_requirements() {
    msg_info "Procesing requirements..."
    if [ ! -f $REQUIREMENTS_FILE ]; then
        msg_info "Procesing requirements... not found"
        return
    fi

    activate_virtualenv
    pip install --use-mirrors -r $REQUIREMENTS_FILE
    check_status $? "Procesing requirements..."
    deactivate
}

check_python
check_venv
install_requirements
